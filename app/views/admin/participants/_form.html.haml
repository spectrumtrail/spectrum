-# frozen_string_literal: true
= simple_form_for([:admin, @participant.decorate]) do |f|
  = f.error_notification
  - if f.object.errors[:base].present?
    = f.error_notification message: f.object.errors[:base].to_sentence

  .form-inputs
    = f.association :race,
      collection: @participant.event.races.active.not_archived,
      label_method: :name_with_event,
      value_method: :id,
      prompt: "Which race does this Person want to do? <b>Changing it will not affect payment in any way.</b>".html_safe
    = f.input :first_name, label: 'First Name'
    = f.input :last_name, label: 'Last Name'
    = f.input :email, as: :email
    = f.input :phone, as: :tel, hint: "Used for important Race updates."
    = f.input :address
    = f.input :city
    = f.input :state,
      collection: states_list,
      class: "form-control selectpicker",
      prompt: "Select A State"
    = f.input :zip
    = f.input :birth_date,
      as: :date,
      start_year: start_year_selection,
      end_year: end_year_selection,
      order: [:month, :day, :year],
      validate: true
    = f.input :division,
      as: :radio_buttons,
      collection: gender_selection_array,
      item_wrapper_class: "inline custom-control custom-radio",
      label: "Gender Identity",
      required: true
    = f.input :emergency_contact_name
    = f.input :emergency_contact_phone, as: :tel
    = f.input :medical_conditions,
      as: :text,
      input_html: { class: "textarea-autosize" },
      hint: "Do you have any medical conditions that might affect first aid?"
    = f.input :team_name,
      label: "Team Name",
      hint: 'If changing participant to a race that requires one, be sure to put it here!'

  .form-actions
    = f.button :submit, class: "btn btn-md btn-success"
